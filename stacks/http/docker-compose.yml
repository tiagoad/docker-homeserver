version: '3.6'

configs:    
  authelia_v7:
    file: authelia.yml

  auth_v1:
    file: auth.yml

  traefik_v21:
    file: traefik.toml

  traefikp_v20:
    file: traefik-providers.toml

  nginx_v2:
    file: nginx.conf

services:
  authelia_nginx:
    image: nginx:1.17-alpine

    configs:
      - source: nginx_v2
        target: /etc/nginx/nginx.conf

    networks:
      - auth

    deploy:
      <<: *deploy


  traefik:
    image: traefik:2.1.2
    
    command:
      - "--configFile=/traefik.toml"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SSD}/http_traefik/:/data
      
    configs:
      - source: traefik_v21
        target: /traefik.toml

      - source: traefikp_v20
        target: /traefik-providers.toml
      
    networks:
      - internet
      - http
      - auth

    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
        
      - target: 443
        published: 443
        protocol: tcp
        mode: host

    deploy:
      <<: *deploy
      labels:
        # web interface
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`traefik.${MAIN_DOMAIN}`)" # host
        - "traefik.http.services.api.loadbalancer.server.port=8080" # port
        - "traefik.http.routers.api.tls.certresolver=le" # let's encrypt
        - "traefik.http.routers.api.middlewares=auth@file" # authelia
        - "traefik.http.routers.api.service=api@internal"

  authelia:
    image: authelia/authelia:4.3
    
    configs:
      - source: authelia_v7
        target: /etc/authelia/configuration.yml

      - source: auth_v1
        target: /data/auth.yml
        
    environment:
      TZ: Europe/Lisbon
      AUTHELIA_JWT_SECRET: '${AUTHELIA_JWT_SECRET}'
      AUTHELIA_SESSION_SECRET: '${AUTHELIA_SESSION_SECRET}'
    
    networks:
      - auth
      
    volumes:
      - ${SSD}/http_authelia/:/data
      
    deploy:
      <<: *deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.authelia.loadbalancer.server.port=80"
        - "traefik.http.routers.authelia.rule=Host(`auth.${MAIN_DOMAIN}`)"
        - "traefik.http.routers.authelia.tls.certresolver=le"
        - "traefik.docker.network=http_auth"

networks:
  # internet access
  internet:
    external: true

  # http traffic network
  http:
    external: true

  auth:
    driver: overlay
